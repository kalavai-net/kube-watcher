apiVersion: v1
kind: Namespace
metadata:
  name: $namespace
---
apiVersion: v1
kind: Secret
metadata:
  name: $deployment_name-config-data
  namespace: $namespace
stringData:
  embeddings-url: "https://embeddings.test.k8s.mvp.kalavai.net"
  llm-endpoints.json: |
    {
      "meta-llama/Meta-Llama-3-8B-Instruct": "https://api.runpod.ai/v2/vllm-e8vlc46h35wead/openai/v1",
      "Equall/Saul-Instruct-v1": "https://api.runpod.ai/v2/vllm-8ckdz9zakc661s/openai/v1"
    }   
---
apiVersion: v1
kind: Secret
metadata:  
  name: buildersecret
  namespace: $namespace
type: Opaque
data:
  username: $username
  password: $password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: $namespace
  name: $deployment_name-agent-builder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $deployment_name-agent-builder
  template:
    metadata:
      labels:
        app: $deployment_name-agent-builder
    spec:
      containers:
      - name: agent-builder-container
        image: bundenth/agent_builder:v9
        env:
        ports:
        - containerPort: 7860
        env:
        - name: EMBEDDING_API_URL
          valueFrom:
            secretKeyRef:
              name: $deployment_name-config-data
              key: embeddings-url
        - name: LANGFLOW_AUTO_LOGIN
          value: "False"
        - name: LANGFLOW_NEW_USER_IS_ACTIVE
          value: "True"
        - name: LANGFLOW_STORE
          value: "False"
        - name: LANGFLOW_LANGCHAIN_CACHE
          value: "SQLiteCache"
        - name: LANGFLOW_DATABASE_URL
          value: sqlite:////usr/src/persistent/langflow.db
        - name: LANGFLOW_LOG_FILE
          value: "/usr/src/persistent/langflow.log"
        - name: LANGFLOW_CONFIG_DIR
          value: "/usr/src/persistent/"
        - name: LANGFLOW_SUPERUSER
          valueFrom: 
            secretKeyRef: 
              name: buildersecret
              key: username 
        - name: LANGFLOW_SUPERUSER_PASSWORD
          valueFrom: 
            secretKeyRef: 
              name: buildersecret
              key: password
        - name: LANGFLOW_COMPONENTS_PATH
          value: '["/usr/src/app/agent_builder/custom_components"]'
        - name: MODEL_ENDPOINT_API_KEY
          value: "N3E9AGVU7IR9E6QLXMIP6YO330M2D005DH5MN4C6"
        - name: MODEL_ENDPOINTS
          value: "/etc/config/llm-endpoints.json"
        command: ["/bin/sh", "-c"]
        args:
        - |
          # liveness probe
          touch /tmp/healthy
          cp /usr/src/app/data/database/langflow.db.rag /usr/src/persistent/langflow.db
          langflow run --host 0.0.0.0 --port 7860 --no-open-browser --no-store
          rm /tmp/healthy
        volumeMounts:
        - name: $deployment_name-config-volume
          mountPath: "/etc/config/llm-endpoints.json"
          subPath: llm-endpoints.json
          readOnly: true
        - name: $deployment_name-agent-builder-storage
          mountPath: "/usr/src/persistent"
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 20
          periodSeconds: 30
        resources:
          limits:
            cpu: $num_cores
            memory: "$ram_memory"
          requests:
            cpu: $num_cores
            memory: "$ram_memory"
      volumes:
      - name: $deployment_name-config-volume
        secret:
          secretName: $deployment_name-config-data
      - name: $deployment_name-agent-builder-storage
        persistentVolumeClaim:
          claimName: $deployment_name-agent-builder-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: $deployment_name-agent-builder-service
  namespace: $namespace
  labels:
    app: $deployment_name-agent-builder
spec:
  selector:
    app: $deployment_name-agent-builder
  ports:
    - name: http
      port: 80
      targetPort: 7860
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $deployment_name-agent-builder-pvc
  namespace: $namespace
spec:
  storageClassName: longhorn-nr
  accessModes:
   - ReadWriteOnce
  resources:
   requests:
    storage: $storage_memory
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $deployment_name-agent-builder-ingress
  namespace: $namespace
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: traefik
  rules:
    # Add a DNS record to match this URL to the IP of the cluster
    - host: $namespace.$deployment_name.test.k8s.mvp.kalavai.net
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: $deployment_name-agent-builder-service
                port:
                  number: 80
            path: /
  tls:
  - hosts:
    - $namespace.$deployment_name.test.k8s.mvp.kalavai.net
    secretName: $namespace.$deployment_name.test.k8s.mvp.kalavai.net-tls

