apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: {{deployment_id}}
  labels:
    # must have this label
    kalavai.job.name: {{deployment_id}}
spec:
  queue: default
  schedulerName: volcano
  plugins:
    env: []
    svc: ["--disable-network-policy=true"]
  maxRetries: {{max_retries}}
  tasks:
  - replicas: {{replicas}}   # One ps pod specified
    name: server
    policies:
    - event: PodEvicted
      action: RestartJob
    - event: PodFailed
      action: RestartJob
    - event: TaskCompleted
      action: RestartJob
    - event: Unknown
      action: RestartJob
    template: # Definition of the ps pod
      metadata:
        labels:
          role: leader
          kalavai.job.name: {{deployment_id}}
      spec:
      {% if NODE_SELECTORS %}
        nodeSelector:
        {% for selector in NODE_SELECTORS %}
          {{selector.name}}: {{selector.value}}
        {% endfor %}
      {% endif %}
        containers:
        - name: leader
          image: ghcr.io/open-webui/open-webui:main
          # command:
          # - sh
          # - -c
          # - |
          #   open-webui serve --host 0.0.0.0 --port 8080;
          env:
          - name: OPENAI_API_BASE_URL
            value: {{litellm_base_url}}/v1
          - name: OPENAI_API_KEY
            value: {{litellm_key}}
          - name: ENABLE_OLLAMA_API
            value: "False"
          - name: WEBUI_AUTH
            value: "{{webui_auth}}"
          - name: ENABLE_LOGIN_FORM
            value: "True"
          - name: ENABLE_SIGNUP
            value: "True"
          - name: DEFAULT_USER_ROLE
            value: "{{default_user_role}}" #"admin"
          - name: OFFLINE_MODE
            value: "True"
          - name: DATA_DIR
            value: "./data"
          - name: ENABLE_MESSAGE_RATING
            value: "False"
          - name: ENABLE_COMMUNITY_SHARING
            value: "False"
          - name: BYPASS_MODEL_ACCESS_CONTROL
            value: "True"
          ports:
          - containerPort: 8080
            name: model-port
          resources:
            requests:
              cpu: {{cpus}}
              memory: {{memory}}Gi
            limits:
              cpu: {{cpus}}
              memory: {{memory}}Gi
        restartPolicy: OnFailure
---
# deploy NodePort to expose model
apiVersion: v1
kind: Service
metadata:
  name: {{deployment_id}}-service
  labels:
    # must have this!
    kalavai.job.name: {{deployment_id}}
spec:
  type: NodePort
  selector:
    role: leader
    kalavai.job.name: {{deployment_id}}
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP