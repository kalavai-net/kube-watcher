apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: {{deployment_id}}
  labels:
    # must have this label
    kalavai.job.name: {{deployment_id}}
spec:
  queue: default
  schedulerName: volcano
  plugins:
    env: []
    svc: ["--disable-network-policy=true"]
  tasks:
  - replicas: 1   # One ps pod specified
    name: frontend
    policies:
    - event: PodEvicted
      action: RestartTask
    - event: PodFailed
      action: RestartTask
    - event: TaskCompleted
      action: RestartTask
    - event: Unknown
      action: RestartTask
    template: # Definition of the ps pod
      metadata:
        annotations:
          # must have these annotations
          {{nouse_gputype}}
          {{use_gputype}}
        labels:
          role: leader
          kalavai.job.name: {{deployment_id}}
      spec:
      {% if NODE_SELECTORS %}
        nodeSelector:
        {% for selector in NODE_SELECTORS %}
          {{selector.name}}: {{selector.value}}
        {% endfor %}
      {% endif %}
        containers:
        - name: unmute-frontend
          image: docker.io/unmute-frontend:latest
          ports:
          - containerPort: 3000
            name: model-port
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
        restartPolicy: OnFailure
  - replicas: 1   # One ps pod specified
    name: backend
    policies:
    - event: PodEvicted
      action: RestartTask
    - event: PodFailed
      action: RestartTask
    - event: TaskCompleted
      action: RestartTask
    - event: Unknown
      action: RestartTask
    template: # Definition of the ps pod
      metadata:
        annotations:
          # must have these annotations
          {{nouse_gputype}}
          {{use_gputype}}
        labels:
          kalavai.job.name: {{deployment_id}}
      spec:
      {% if NODE_SELECTORS %}
        nodeSelector:
        {% for selector in NODE_SELECTORS %}
          {{selector.name}}: {{selector.value}}
        {% endfor %}
      {% endif %}
        containers:
        - name: unmute-frontend
          image: docker.io/unmute-backend:latest
          ports:
          - containerPort: 80
            name: model-port
          env:
          - name: KYUTAI_STT_URL
            value: "ws://stt:8080"
          - name: KYUTAI_TTS_URL
            value: "ws://tts:8080"
          - name: KYUTAI_LLM_URL
            value: "{{llm_endpoint}}"
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
        restartPolicy: OnFailure
  - replicas: 1   # One ps pod specified
    name: stt
    policies:
    - event: PodEvicted
      action: RestartTask
    - event: PodFailed
      action: RestartTask
    - event: TaskCompleted
      action: RestartTask
    - event: Unknown
      action: RestartTask
    template: # Definition of the ps pod
      metadata:
        annotations:
          # must have these annotations
          {{nouse_gputype}}
          {{use_gputype}}
        labels:
          role: leader
          kalavai.job.name: {{deployment_id}}
      spec:
        runtimeClassName: nvidia
      {% if NODE_SELECTORS %}
        nodeSelector:
        {% for selector in NODE_SELECTORS %}
          {{selector.name}}: {{selector.value}}
        {% endfor %}
      {% endif %}
        containers:
        - name: unmute-stt
          image: docker.io/moshi-server:latest
          command:
          - sh
          - -c
          - |
            worker --config configs/stt.toml
          env:
          - name: HF_TOKEN
            value: {{hf_token}}
          ports:
          - containerPort: 8080
            name: model-port
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          resources:
            requests:
              cpu: {{cpus}}
              memory: {{memory}}Gi
              nvidia.com/gpu: {{gpus}}
            limits:
              cpu: {{cpus}}
              memory: {{memory}}Gi
              nvidia.com/gpu: {{gpus}}
        restartPolicy: OnFailure
  - replicas: 1   # One ps pod specified
    name: tts
    policies:
    - event: PodEvicted
      action: RestartTask
    - event: PodFailed
      action: RestartTask
    - event: TaskCompleted
      action: RestartTask
    - event: Unknown
      action: RestartTask
    template: # Definition of the ps pod
      metadata:
        annotations:
          # must have these annotations
          {{nouse_gputype}}
          {{use_gputype}}
        labels:
          role: leader
          kalavai.job.name: {{deployment_id}}
      spec:
        runtimeClassName: nvidia
      {% if NODE_SELECTORS %}
        nodeSelector:
        {% for selector in NODE_SELECTORS %}
          {{selector.name}}: {{selector.value}}
        {% endfor %}
      {% endif %}
        containers:
        - name: unmute-tts
          image: docker.io/moshi-server:latest
          command:
          - sh
          - -c
          - |
            worker --config configs/tts.toml
          env:
          - name: HF_TOKEN
            value: {{hf_token}}
          ports:
          - containerPort: 8080
            name: model-port
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          resources:
            requests:
              cpu: {{cpus}}
              memory: {{memory}}Gi
              nvidia.com/gpu: {{gpus}}
            limits:
              cpu: {{cpus}}
              memory: {{memory}}Gi
              nvidia.com/gpu: {{gpus}}
        restartPolicy: OnFailure